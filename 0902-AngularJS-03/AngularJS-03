1、过滤器
	过滤器用在表达式，实现对表达式结果的筛选、过滤、格式化，达到更好的表现效果。
	用法：{{表达式 | filter1 | filter2:param}}
		| 是管道，表示传递数据的管道。

	1、实现货币的格式化
		currency:{{price | currency:"￥"}}
	2、实现日期的格式化
		date:{{date | date:}}
	3、实现大小写转换

	4、实现排序
		orderBy	实现排序，指定升序/降序
		{{temp in list | orderBy:'名称', true/false}}

	练习：对象数组，5个对象：age name score 
		按照age降序、按照name升序、按照score降序，只显示前三名

		分析：

2、方法：		--  ng所提供的方法
	angular.forEach(set,function(value,key){...})
	angular.uppercase(name);
	angular.lowercase(name);
	......

	angular.toJson(jsonObj)：将传入的json对象序列化为一个json字符串

3、服务：
	服务就是一个单例对象。
	功能：提供数据、方法、对象。
	划分：内置服务、自定义服务
		( $http / $location / $window / $scope / $rootscope )

	在使用服务的时候，需要将用到的服务注入进来。
		app.controller('myCtrl',function( $scope , $location ){...})

	$rootScope与$scope之间的关系：

	$http 跟服务器交互
	$http.get('url').success(function(data){...})

	实现：通过 $http 从php文件中度读取数据
	分析：
		例：5 $http服务的使用2.html

[16/09/02:162000]
4、双向数据绑定的原理：
	1、{{num}}
		ng就在$scope给num设置一个watcher
			$scope.$watch('num',function(){...})
	2、watcher的回调什么时候会执行？？？
		ng会周期性高的运行一个函数，$digest循环。
		会触发各个watcher，ng的scope作对比判断值是否会发生变化。
	3、什么时候执行$digest循环？？？
		ng指令都会触发循环；
		$scope.$digest
		$scope.$apply ==> $rootScope.$digest

5、依赖注入：
	文件压缩：
		会删除所有的注释，并删除空白字符，尽可能简化变量的名称、方法名、形参名(为了形成混淆)，所有的数据、关键字都不会发生改变。

		方式一：文件压缩的dos命令：
			D:\>java.exe -jar yuicompressor-2.3.jar test.js > test.min.js

		方式二：
			在webstorm中，点击file-settings-tools-fileWatcher，点击 + 号，配 置program为下载的yui-compressor.jar

	依赖注入：
		什么是依赖注入？	--16/09/02 17:44:00	网络故障

		依赖注入的三种方式：
			推断式
			
			行内式