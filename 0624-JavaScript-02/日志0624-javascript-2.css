js-basic Day-01 前情回顾
1、回顾
	1、
	2、调试
	3、语法规范
		1、JS代码组成
			1、语句
				console.log();
				document.write();
				var userName = "";
				......

				表达式、关键字、运算符 ...... 区分大小写。都是 以 ；结尾
	4、变量
		1、什么是变量
			一个可以变化的数据
			变量名：数据的名称、内存空间的别名。
			值：保存在变量中的数据，可变。
    2、声明变量
      
    3、为变量赋值
      使用 = 为变量赋值
    4、变量名命名规范
		1、不能使用JS关键字和保留关键字
		2、由字母、数字、下划线_、$ 组成
		3、不能以数字开头
		4、最好见名知意
		5、可以采用"匈牙利"、"下划线"、"驼峰"命名法
    5、变量的使用
		1、使用未初始化的变量
		2、使用未声明过的变量
		3、声明变量不带 var
		4、变量的存取操作
			1、存 - 为变量赋值
			  特点：变量出现在赋值符号 = 的左边
			2、取 - 使用变量的值
				1、配合函数使用
					console.log(userName);
					document.write(userAge);
				2、变量出现在赋值符号的右边
		5、常量
			1、什么是常量
				一旦声明之后不允许被修改的数据就是常量
			2、目的
				为保护数据的正确性
			3、声明常量
				const 常量名 = 值;
		6、数据类型
			1、什么是数据类型
				保存在内存中的数据的类型
			2、JS数据类型
				1、原始类型（基本类型）
					1、number 
						数字类型
					2、string
						字符串
						注意：使用时，必须使用 "" 或 '' 引起来

						转义字符：
						\n : 换行
						\r : 回车
						\t : 制表符
						\\ :  \
						\" :  "
						\' :  '
					3、boolean
						布尔类型
						只负责描述 真 或 假 的结果
						取值：
							true : 真 ，1
							false : 假 ，0
						boolean 类型是允许参与到 number 类型的运算中。
					4、undefined
						声明未赋值
						访问对象的属性不存在
					5、null
				2、引用类型

js-basic Day-02
2、数据类型转换
	1、弱类型
		变量的 数据类型 取决于 值
	2、typeof 函数（运算符）
		作用：查看当前变量的数据类型
		语法：
			1、typeof(变量名)
			2、typeof 变量名
	3、隐式转换
		1、问题
			var userName = "Mary";
			var userAge = 18;
			var result = userName + userAge;
		2、什么是隐式转换
			不同类型的数据在做运算的时候，可以进行默认的数据类型的转换。
		3、隐式转换
			NaN ：Not a number (不是一个数字)
				函数：isNaN(变量)	：是 不是一个数字
					false :  是数字
					true : 不是数字
			1、string 类型转换
				var a = "18";
				var a = "18";

				var r1 = a + b;		//1818	字符串
				var r2 = a - b;		//0		数字
				var r3 = a * b;		//324	数字
				var r4 = a / b;		//1		数字
				var r5 = a % b;		//0		数字

				【值 为 数字 的字符串，在做 - * / % 运算时，
				  会自动转换成 number 类型进行运算，+ 仍然是 连接 操作。】
			2、在JS中，所有用户手动输入的数据，默认都是 string 类型。

				1、window.prompt("提示的文本"[,默认值]);
				2、prompt("提示的文本"[,默认值]);
	4、显示转换
		由 转换函数 完成 显式转换
		1、toString()
			转换成 字符串，将任意类型的数据转换成 string 类型
				var num = 15;
				num.toString();
		2、parseInt(参数)
			将 参数 转换成 整数
			碰到第一个非数字字符，则停止转换
		3、parseFloat(参数)
			将 参数 转换成 小数
3、函数
	1、使用过的函数
		console.log();
		document.write();
		window.prompt();
		parseInt();
		parseFloat();
	2、为什么要使用函数
		1、放在<script>中的js脚本，在网页加载时就执行 -- 执行时机没法选择。
		2、代码冗余 -- 将代码写在函数事件中。
		3、可重用性不高
	3、什么是函数
		函数（Function）:也被称之为 方法（Method），或者过程（Procedure）。
		函数是一段被预定义好，并且可以被反复使用的代码块。
		
		预定义：先编写完成，但不会在被网页加载时就执行的代码。
		反复使用：可以被无限次的使用。
		代码块：将多行代码放在一起去管理。

		函数其实就是一个完整的且功能独立的功能体。
	4、函数的声明
		使用关键字 function 声明一个函数
		语法：
			function 函数名称(){
				代码块;
				可执行的操作语句;
			}

	5、函数的调用
		JS脚本中，通过 函数名() 进行函数的调用

		练习：
			声明一个函数，在函数体内，要求用户输入两个数字，计算两个数字的加减乘除结果，并且打印出以上结果。
			在页面上定义一个按钮，实现对以上函数的调用。
			//见06.html
	6、定义参数
		参数：函数在运行过程中，需要用到的数据进行辅助操作，数据就是参数。
		1、语法：
			function 函数名(参数列表){
					//函数体
			}
			function 函数名(参数名1,参数名2){
			
			}
			function zha(fruit){
				console.log(fruit);
				document.write(fruit);
			}
	
			形参：定义函数的时候声明的参数。
			调用带参函数：
				函数名(参数值列表);
			【注意】：调用带参数的函数时，参数的顺序、数量 要与声明时保持一致
			实参：调用函数的时候传递的值。
4、分支结构
	1、流程控制
		程序 = 数据结构 + 算法

		任何程序都由以下三种结构组成：
		1、顺序结构
		2、选择结构（分支结构）
			根据“条件”，选择某一段代码去执行。
		3、循环结构
			根据“条件”，选择某一段代码反复执行。
	2、分支结构
		1、什么是分支结构
			根据不同的条件，选择不同的代码执行
			if 结构：
				当条件满足时，运行指定的语句，
				当条件不满足时，则不运行这些语句
			if...else 结构：
				当条件满足时，运行指定的一组语句，
				当条件不满足时，运行另一组语句
		2、if 结构
			语法：
				if(条件){
					语句块;
				}
				条件：boolean 类型的结果或表达式
				> , < , >= , <= , ==
			注意：
				1、if (条件){}
					条件：必须是boolean类型
					【如果不是boolean类型的话，会产生隐式转换】
					以下情况会默认转换成 假：
					if(0){}
					if(0.0){}
					if(""){}
					if(null){}
					if(undefined){}
					if(NaN){}
					eg ：
						if(1){}	 //真
						if('今天下雨了吗？'){}	//真
				2、if 后的 {} 可以省略
					如果省略，那么 if 只控制他下面的第一条语句
		3、if-else 结构
			语法：
				if(条件){
					语句块1;
				}else{
					语句块2;
				}
			流程：
				1、判断条件是否为真
				2...
				...
		4、多重 if 结构
			1、问题
				编写一个函数，让用户输入一个...
			2、语法
				if(条件1){
					语句块1;
				}else if(条件2){
					语句块2;
				}else if(条件3){
					语句块3;
				}...else{
					语句块n;
				}
			特点：
				从上到下判断条件，满足哪个条件则执行对应的语句块，
				执行完成后，就跳出该结构，即便满足其他条件，也不会判断。
			
			练习：
				计算 可莱托 指数
				公式：体重(kg)/(身高(m)*身高(m))
					20-25:正常
					20以下：偏瘦
					25以上：偏胖