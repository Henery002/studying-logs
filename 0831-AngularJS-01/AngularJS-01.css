AngularJS-01：

1、框架：
    优秀的可以重复使用的代码，单独提取封装好，完成复杂的功能，提高代码质量，保证良好的浏览器兼容。
    学习框架，理解框架，动手查阅手册、快速实现编码。
2、学习安排：
	3天理论知识学习 + 2天综合项目
3、设计原则和模式：
	设计原则：
		==>	[僵化性(Rigidity)：，
			 脆弱性(Fragility)：，
			 牢固性(Immobility)：，
		  	 粘滞性(Viscosity)：，
			 不必要的复杂性：(Needless Complexisity)，
			 不必要的重复：，
			 晦涩性：，
			]
		七大设计原则：
		1、YAGNI(不写不需要的代码)： You aren't Gonna Need it.
		2、KISS(代码越简单越好)：Keep it Simple and Stupid.
		3、DRY(不要重复ctrl+c、ctrl+v，封装和重用)：Dont`t Repeat Yourself.
		4、High Cohesion,Low Coupling(高内聚低耦合)：
			内聚：一个组件内不同部分的关系
			耦合：不同组件之间的关系
		5、SRP(单一责任原则)：Single Responsibility Principle.
		6、OCP(开闭原则)：Open Closed Principle.
			对扩展开放，对于修改关闭
		7、LCP(迪米特法则/最少知识法则)：Least Knowledge Principle.
			封装的功能单位要小，只与自己相关

	设计模式：		--  23种
		1、创建型模式，共五种：
			工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
		2、结构型模式：共七种：
			适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。
		3、行为型模式：共十一种：
			策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、
			备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。

	MVC：
		为什么需要MVC？
			1、代码规模越来越大，切分职责是大势所趋。
			2、为了复用代码，很多逻辑都是一样的，封装。
			3、为了方便后期维护，修改一块功能而不影响其他功能。

		什么是MVC？
			M：Model		--  模型数据	业务数据
			V：View			--  视图		业务数据的表现
			C：Controller	--  控制器		负责控制器数据的增删改查
		工作原理：
			当用户触发事件的时候，view层会发送指令给controller，接着控制器去通知model层更新数据，直接显示在view层，这就是MVC的工作原理。
 
4、AngularJS：
	1、什么是AngularJS：
		诞生在09年，后来被Google收购的一个js框架。使用其构建以数据操作为主的SPA应用(Single Page Application,SPA 单页面应用)。
	2、四大特征：
		1、使用MVC模式
		2、双向数据绑定
		3、依赖注入
		4、模块化设计
	3、使用NG的表达式、指令
		AngularJS中，如果执行表达式(由数据变量和运算符)
			语法：{{表达式}}

	练习：通过ng-init初始化一个对象数组，3个对象，
		对象中包含name、score、age，输出到table中。
