1、回顾
	1、数据类型转换
		1、什么是数据类型转换
		2、数据类型转换分类
			1、隐式转换
				自动完成
			2、显使转换
				转换函数
					1、toString()
						将任意类型的数据转换成string类型
					2、parseInt()
						将指定的数据转换成【整数】。如果碰到第一个非数字字符则停止转换。
						eg:
							parseInt(53.5) -> 53
							parseInt("73") -> 73
							parseInt("12Hello") -> 12
							parseInt("H23") -> NaN

					3、pareFloat()
						将指定的数据转换成小数
	2、函数
		1、什么是函数
			函数(Function)：又称为方法(Method)、过程(Procedure)
		2、定义函数
			语法：
				function 函数名(){
					函数体;
				}
		3、调用函数
			函数调用的几种方式：
				1、函数名();
				2、<button onclick="函数名()"></button>
				3、<script>
						函数名();
				   </script>
				4、function 函数1(){
						函数2();
					}
				5、function 函数3(){
						函数3();
				}
		4、带参函数
			1、声明
				语法：
				function 函数名(参数列表){
					函数体;
				}
			2、调用
				函数名(参数值列表);
	3、分支（选择）结构
		1、程序的流程
			1、顺序结构
				自顶向下，逐条语句执行
			2、分支结构
				根据指定的条件，选择某段代码去执行
			3、循环结构
		2、分支结构
		......
		
		练习 ：
			编写一个“个人所得税计算器”函数。该函数 接受一个参数值，来表示税前工资，在函数内将工资所对应的税额计算出来，并打印输出。
			个税计算梯度如下：
			3500以下：免征
			3500-5000的部分：缴纳3%个税
			5000-9000的部分：缴纳10%个税
			9000以上部分：缴纳20%个税
2、循环结构
	1、问题
		1、在控制台上打印输出一遍 Hello World
		2、在控制台上打印输出十遍 Hello World
		3、在控制台上打印输出100遍 Hello World
		4、将 Hello 改成 您好
		5、在输出的 您好 前加上 序号
	2、循环
		1、什么是循环
			循环：重复执行相同或相似的事情（代码）
		3、循环特点
			1、循环条件
			2、循环操作	又称为循环体
	3、while循环
		1、语法
			while(条件){
				循环操作;
			}
			流程：...
		eg:
		   while(true){
			
		   }		//死循环
		2、注意：
			一定要在循环体内更新循环条件，否则会进入死循环
			i = i+1;
			i += n;
			i ++;
			i --;
		3、break
			1、作用
				用于循环中，终止循环的执行
	4、for循环
		1、while循环
			eg:
			打印1-100之间所有的数字
				var i=1;
				while(i<=100){
					console.log(i);
					i++;
				}
		2、for循环
				表达式1	  表达式2   表达式3
			for(声明循环变量;循环条件;更新循环变量){
				循环体;
			}
		3、使用场合
			1、for
				已经明确了循环次数时，优先使用 for 循环。
			2、while
				不确定循环次数时，相比之下可以优先使用 while 循环。
		4、for 中三个表达式的特殊用法
			1、第一个表达式为空时
				var i=1;
				for(;i<=100;i++){
					console.log(i);
				}
				注意：可以省略第一个表达式，但是必须要在循环之外将第一个表达式内容补齐，否则就是语法错误。
			2、第二个表达式为空时
				for(var i=1;;i++){
					console.log(i);
				}
				省略第二个表达式时，默认其为真。会导致死循环。
				如果省略第二个表达式，一定要在循环体内将条件补足。否则就是死循环。
			3、第三个表达式为空时
				for(var i=1;i<=100;){
					console.log(i);
				}
				省略第三个表达式时，结果为死循环。如果要省略，需要在循环体内补足第三个表达式的值 或 给定退出条件
			4、省略所有表达式
				for(;;){

				}
				省略所有表达式，导致死循环。补足所有的内容即可。
			5、表达式1、表达式3的位置处，允许接受多个表达式。中间用，隔开即可。
3、数组
	1、问题
	2、什么是数组
		多个数据组成的集合
		将多个数据保存在一个变量名中
		下标：数组中每个元素的序号。下标：0 ~ (数组个数-1)
	3、定义和初始化数组
		语法
			var 数组名=[];	//声明一个空数组
			var 数组名=[值1、值2、值3];	//声明一个包含三个元素的数组
			var 数组名=new Array();		//声明一个空数组
			var 数组名=new Array(值1，值2，值3)；	//声明一个包含三个元素的数组
	4、访问数组
		1、访问数组元素的方式
			index:下标/索引,...
			数组名称[下标];
		2、存 - 设置数组元素的值
			数组名称[下标]=值;
			注意：如果下标所对应的元素已经存在，就会实现覆盖
		3、取值
			数组名称[下标];
			注意：访问数组中不存在的元素，结果为 undefined
		4、获取数组长度
			数组长度：即数组中元素个数
			语法：
				数组名称.length