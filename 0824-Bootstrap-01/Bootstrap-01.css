BOOTSTRAP day01:
1、响应式网页（RWD，Responsive Web Design）：
	桌面浏览器、手机端浏览器、平板电脑浏览器
		分辨率
	定义：一个HTML页面同时满足所有终端(PC、平板、手机)
	2010年5月被提出的
2、如何实现响应式：
	1、(大型网站)针对不同的终端开发不同的HTML页面：
		桌面端 	--  pc.html
		移动端  --  mobile.html
		1、优点：用户体验好2，适合于复杂页面
		2、缺点：工作量增大，不够灵活
	2、(中小型网站)开发一个HTML页面同时满足所有终端：
		1、优点：比较灵活，一个页面可以适配所有终端
		2、缺点：加载时间变长，执行效率比较低
3、测试响应式页面：
	1、通过浏览器的开发者工具
	2、通过移动开发框架(手机模拟器)
	3、使用真实设备(手机)
4、如何实现响应式：
	1、手动编写响应式页面
		1、为什么：
			了解+掌握响应式的原理
		2、四个核心要素：
			1、viewport
				翻译为"视口"或"视区"
				作用：表示HTML页面的可视区域
					主要指可视区域
				用法：			--  被定义在<head>标签中
					<meta name="viewport" content="width=device-width,initial-scale=1">
						1、width:当前HTML页面的宽度
						2、device-width:当前设备的宽度
				设置选项：
					1、width:设置页面宽度
					2、height:设置页面高度(一般不用，否则不可上下滑动)
					3、user-scale:设置是否允许用户缩放页面
					4、initial-scale:设置页面初始化缩放比例
				注意：并不是w3c的标准
			2、(CSS)绝对单位改相对单位
				1、宽度：像素值(px)		--  百分值(%)
					1、作为容器元素：
						根据网页的布局设计修改
					2、作为容器的后代元素：
						公式：当前元素宽度/父级元素宽度*100%
				2、字体：像素值(px) 	--  相对值(em)
					1、浏览器解析字体的默认大小		--  12px
					2、em
				3、图片：像素值(px)		--  百分值(%)
					1、max-width/max-height:100%
			3、网格(表格-行/列)布局
				1、种类：
					1、一行多列：流式布局/瀑布流布局
					2、多行多列：有行有列
				2、核心内容：
					1、将HTML页面整个宽度分为12列，HTML页面宽度为100%
						.col-1{width:8.33%;}
						.col-2{width:16.66%;}
						...
					2、元素设置为浮动
						[class*="col-"]{float:left;}
					3、盒子模型/框模型
						1、默认所使用	-- content-box
						2、IE怪异模型	-- border-box
							注意：不是W3C的标准
							* {box-sizing: border-box;}
			4、CSS3的媒体查询
				1、语法：
					1、定义在HTML页面中
						<link meida="媒体类型 操作符 (媒体属性)" href='*.css' rel="stylesheet">
					2、定义在CSS样式中
						@media 媒体类型 操作符 (媒体属性) {  CSS样式内容 }
				2、核心内容：
					1、媒体类型：	--  当前是什么设备
						1、screen		--  屏幕(宽高) √√√√√√
						2、print		--  打印机
						3、all			--  表示所有设备
					2、操作符：
						1、and			--  逻辑与
						2、not			--  逻辑非
						3、only			--  唯一
					3、媒体属性：
						1、width 		--  宽度
						2、min-width	--  最小宽度
						3、max-width	--  最大宽度

	2、第三方框架			--  Bootstrap
5、Bootstrap:	
	1、基础内容：
		解决响应式	--  依靠HTML+CSS
		Bootstrap提供一些插件(JS文件)
	2、如何使用：
		1、容器的概念
			.container			--  使当前页面呈现固定宽度
			.container-fluid	--  100%宽度
			注意：两种容器不能互相嵌套
		2、山歌系统

	扩展内容：
		JS库与框架的区别：
			JS库： 	--  工具：
				作用：简化开发难度
			框架：	--  解决方案：
				前提：先接受框架的思想
		CDN加速：
			不是存储在自己的服务器上，而是存储在专门的服务器上
			专门的服务器性能更好。
			预先下载对应的第三方文件到用户电脑中。